{"version":3,"sources":["assets/logo.svg","assets/pattern.png","App.js","reportWebVitals.js","index.js"],"names":["loadOptions","inputValue","fetch","then","response","json","data","hits","App","Option","innerRef","innerProps","props","SearchResults","ref","onClick","e","preventDefault","window","location","href","url","title","style","info","points","author","ReactTimeAgo","date","created_at","locale","num_comments","MySelect","customOptions","components","placeholder","noOptionsMessage","ContentContainer","fluid","bg","background_pattern","Pattern","src","Content","className","center","Logo","logo","styled","Container","div","img","fontSize","color","display","placeItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TimeAgo","addDefaultLocale","en","addLocale","ru","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAAe,MAA0B,iCCA1B,MAA0B,oC,sGCUnCA,EAAc,SAACC,GACnB,OAAOC,MAAM,8CAAD,OACoCD,EADpC,gBAGTE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUA,EAAKC,SA2DVC,MAxDf,WACE,IAAMC,EAAS,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,WAAeC,EAAY,iBACrD,OAEE,aADA,CACCC,EAAD,yBACEC,IAAKJ,GACDC,GAFN,IAGEI,QAAS,SAACC,GACRA,EAAEC,iBACFC,OAAOC,SAASC,KAAhB,UAA0BR,EAAMN,KAAKe,MALzC,SAQE,gCACE,+BAAOT,EAAMN,KAAKgB,QAClB,uBACA,sBAAMC,MAAOA,EAAMF,IAAnB,SAAyBT,EAAMN,KAAKe,MACpC,uBACA,uBAAME,MAAOA,EAAMC,KAAnB,UACGZ,EAAMN,KAAKmB,OADd,aACgCb,EAAMN,KAAKoB,OAD3C,KACqD,IACnD,cAACC,EAAA,EAAD,CAAcC,KAAMhB,EAAMN,KAAKuB,WAAYC,OAAO,UAFpD,KAEiE,IAC9DlB,EAAMN,KAAKyB,aAHd,sBAUFC,EAAW,WACf,IAAMC,EAAgB,CACpBxB,OAAQ,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAeC,EAA5B,wBACN,cAAC,EAAD,4BAAcF,WAAUC,cAAeC,OAG3C,OACE,cAAC,IAAD,CACEZ,YAAaA,EACbkC,WAAYD,EACZE,YAAa,sDACbC,iBAAkB,iBAAM,+BAK9B,OACE,eAACC,EAAD,CAAkBC,OAAK,EAACC,GAAIC,EAA5B,UACE,cAACC,EAAD,CAASC,IAAKF,IACd,eAACG,EAAD,CAASC,UAAU,2BAAnB,UACE,qBAAKrB,MAAOA,EAAMsB,OAAlB,SACE,cAACC,EAAD,CAAMJ,IAAKK,MAEb,cAACf,EAAD,WAUFK,EAAmBW,YAAOC,IAAPD,CAAH,iLAShBL,EAAUK,IAAOE,IAAV,2CAIPT,EAAUO,IAAOG,IAAV,+EAMPL,EAAOE,IAAOG,IAAV,4FAMJtC,EAAgBmC,IAAOE,IAAV,mRAcb3B,EAAQ,CACZF,IAAK,CACH+B,SAAU,OACVC,MAAO,QAET7B,KAAM,CACJ4B,SAAU,OACVC,MAAO,QAETR,OAAQ,CACNS,QAAS,OACTC,WAAY,WCpHDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gCCIdO,IAAQC,iBAAiBC,GACzBF,IAAQG,UAAUC,GAGlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.3dcc328f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.36d778a4.svg\";","export default __webpack_public_path__ + \"static/media/pattern.1d9a944c.png\";","import React from \"react\";\nimport logo from \"../src/assets/logo.svg\";\nimport background_pattern from \"../src/assets/pattern.png\";\nimport styled from \"styled-components\";\nimport AsyncSelect from \"react-select/async\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport \"./App.css\";\nimport { Container } from \"reactstrap\";\n\n// load options using API call\nconst loadOptions = (inputValue) => {\n  return fetch(\n    `https://hn.algolia.com/api/v1/search?query=${inputValue}&tags=story`\n  )\n    .then((response) => response.json())\n    .then((data) => data.hits);\n};\n\nfunction App() {\n  const Option = ({ innerRef, innerProps, ...props }) => {\n    return (\n      //optionally you can replace this parent div with a touchable opacity button, and remove the button\n      <SearchResults\n        ref={innerRef}\n        {...innerProps}\n        onClick={(e) => {\n          e.preventDefault();\n          window.location.href = `${props.data.url}`;\n        }}\n      >\n        <div>\n          <span>{props.data.title}</span>\n          <br />\n          <span style={style.url}>{props.data.url}</span>\n          <br />\n          <span style={style.info}>\n            {props.data.points} points | {props.data.author} |{\" \"}\n            <ReactTimeAgo date={props.data.created_at} locale=\"en-US\" /> |{\" \"}\n            {props.data.num_comments} comments\n          </span>\n        </div>\n      </SearchResults>\n    );\n  };\n\n  const MySelect = () => {\n    const customOptions = {\n      Option: ({ innerRef, innerProps, ...props }) => (\n        <Option {...{ innerRef, innerProps, ...props }} />\n      ),\n    };\n    return (\n      <AsyncSelect\n        loadOptions={loadOptions}\n        components={customOptions}\n        placeholder={<div>Type here to search</div>}\n        noOptionsMessage={() => \"there are no results yet\"}\n      />\n    );\n  };\n\n  return (\n    <ContentContainer fluid bg={background_pattern}>\n      <Pattern src={background_pattern} />\n      <Content className=\"col-10 col-md-8 col-lg-4\">\n        <div style={style.center}>\n          <Logo src={logo} />\n        </div>\n        <MySelect />\n      </Content>\n    </ContentContainer>\n  );\n}\n\nexport default App;\n\n// styled-components\n\nconst ContentContainer = styled(Container)`\n  height: 100vh;\n  padding-top: 15vh;\n  font-family: \"Poppins\", sans-serif;\n  background: #1a87c5;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Content = styled.div`\n  z-index: 1;\n`;\n\nconst Pattern = styled.img`\n  position: absolute;\n  top: 0;\n  width: 100vw;\n`;\n\nconst Logo = styled.img`\n  margin-bottom: 1rem;\n  height: 10vh;\n  align-self: center;\n`;\n\nconst SearchResults = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  color: black;\n  padding: 5px 20px;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n  }\n`;\n\nconst style = {\n  url: {\n    fontSize: \"12px\",\n    color: \"blue\",\n  },\n  info: {\n    fontSize: \"12px\",\n    color: \"gray\",\n  },\n  center: {\n    display: \"grid\",\n    placeItems: \"center\",\n  },\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TimeAgo from \"javascript-time-ago\";\n\nimport en from \"javascript-time-ago/locale/en\";\nimport ru from \"javascript-time-ago/locale/ru\";\n\nTimeAgo.addDefaultLocale(en);\nTimeAgo.addLocale(ru);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}